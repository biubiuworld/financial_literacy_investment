# Generated by Django 2.2.12 on 2021-06-04 21:31

from django.db import migrations, models
import django.db.models.deletion
import otree.db.idmap
import otree.db.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('otree', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_in_subsession', otree.db.models.PositiveIntegerField(db_index=True, null=True)),
                ('round_number', otree.db.models.PositiveIntegerField(db_index=True, null=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='skill_task_group', to='otree.Session')),
            ],
            options={
                'db_table': 'skill_task_group',
            },
            bases=(models.Model, otree.db.idmap.GroupIDMapMixin),
        ),
        migrations.CreateModel(
            name='Subsession',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('round_number', otree.db.models.PositiveIntegerField(db_index=True, null=True)),
                ('session', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='skill_task_subsession', to='otree.Session')),
            ],
            options={
                'db_table': 'skill_task_subsession',
            },
            bases=(models.Model, otree.db.idmap.SubsessionIDMapMixin),
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_in_group', otree.db.models.PositiveIntegerField(db_index=True, null=True)),
                ('_payoff', otree.db.models.CurrencyField(default=0, null=True)),
                ('round_number', otree.db.models.PositiveIntegerField(db_index=True, null=True)),
                ('_role', otree.db.models.StringField(max_length=10000, null=True)),
                ('if_skill_question_correct', otree.db.models.IntegerField(default=0, null=True)),
                ('num_of_correct_answers', otree.db.models.IntegerField(default=0, null=True)),
                ('male_count', otree.db.models.IntegerField(default=0, null=True)),
                ('female_count', otree.db.models.IntegerField(default=0, null=True)),
                ('other_count', otree.db.models.IntegerField(default=0, null=True)),
                ('dna_count', otree.db.models.IntegerField(default=0, null=True)),
                ('allocation_a1', otree.db.models.FloatField(null=True)),
                ('allocation_b1', otree.db.models.FloatField(null=True)),
                ('allocation_a2', otree.db.models.FloatField(null=True)),
                ('allocation_b2', otree.db.models.FloatField(null=True)),
                ('allocation_a3', otree.db.models.FloatField(null=True)),
                ('allocation_b3', otree.db.models.FloatField(null=True)),
                ('allocation_a4', otree.db.models.FloatField(null=True)),
                ('allocation_b4', otree.db.models.FloatField(null=True)),
                ('allocation_a5', otree.db.models.FloatField(null=True)),
                ('allocation_b5', otree.db.models.FloatField(null=True)),
                ('allocation_a6', otree.db.models.FloatField(null=True)),
                ('allocation_b6', otree.db.models.FloatField(null=True)),
                ('allocation_a7', otree.db.models.FloatField(null=True)),
                ('allocation_b7', otree.db.models.FloatField(null=True)),
                ('allocation_a8', otree.db.models.FloatField(null=True)),
                ('allocation_b8', otree.db.models.FloatField(null=True)),
                ('allocation_a9', otree.db.models.FloatField(null=True)),
                ('allocation_b9', otree.db.models.FloatField(null=True)),
                ('prob_A_1', otree.db.models.FloatField(default=0.1, null=True)),
                ('prob_A_2', otree.db.models.FloatField(default=0.2, null=True)),
                ('prob_A_3', otree.db.models.FloatField(default=0.3, null=True)),
                ('prob_A_4', otree.db.models.FloatField(default=0.4, null=True)),
                ('prob_A_5', otree.db.models.FloatField(default=0.5, null=True)),
                ('prob_A_6', otree.db.models.FloatField(default=0.6, null=True)),
                ('prob_A_7', otree.db.models.FloatField(default=0.7, null=True)),
                ('prob_A_8', otree.db.models.FloatField(default=0.8, null=True)),
                ('prob_A_9', otree.db.models.FloatField(default=0.9, null=True)),
                ('age', otree.db.models.IntegerField(null=True, verbose_name='1. How old are you?')),
                ('gender', otree.db.models.IntegerField(choices=[[0, 'Male'], [1, 'Female'], [2, 'Other'], [3, 'Prefer not to say']], null=True, verbose_name='2. What is your gender?')),
                ('answer', otree.db.models.IntegerField(null=True)),
                ('confidence', otree.db.models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7)], null=True)),
                ('self_evaluation1', otree.db.models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10)], null=True)),
                ('self_evaluation2_slider', otree.db.models.FloatField(choices=[(0, 0), (0.1, 0.1), (0.2, 0.2), (0.3, 0.3), (0.4, 0.4), (0.5, 0.5), (0.6, 0.6), (0.7, 0.7), (0.8, 0.8), (0.9, 0.9), (1, 1)], null=True)),
                ('game_slider1', otree.db.models.FloatField(choices=[(0, 0), (0.1, 0.1), (0.2, 0.2), (0.3, 0.3), (0.4, 0.4), (0.5, 0.5), (0.6, 0.6), (0.7, 0.7), (0.8, 0.8), (0.9, 0.9), (1, 1)], null=True)),
                ('game_slider2', otree.db.models.FloatField(choices=[(0, 0), (0.1, 0.1), (0.2, 0.2), (0.3, 0.3), (0.4, 0.4), (0.5, 0.5), (0.6, 0.6), (0.7, 0.7), (0.8, 0.8), (0.9, 0.9), (1, 1)], null=True)),
                ('game_slider3', otree.db.models.FloatField(choices=[(0, 0), (0.1, 0.1), (0.2, 0.2), (0.3, 0.3), (0.4, 0.4), (0.5, 0.5), (0.6, 0.6), (0.7, 0.7), (0.8, 0.8), (0.9, 0.9), (1, 1)], null=True)),
                ('game_slider4', otree.db.models.FloatField(choices=[(0, 0), (0.1, 0.1), (0.2, 0.2), (0.3, 0.3), (0.4, 0.4), (0.5, 0.5), (0.6, 0.6), (0.7, 0.7), (0.8, 0.8), (0.9, 0.9), (1, 1)], null=True)),
                ('game_slider5', otree.db.models.FloatField(choices=[(0, 0), (0.1, 0.1), (0.2, 0.2), (0.3, 0.3), (0.4, 0.4), (0.5, 0.5), (0.6, 0.6), (0.7, 0.7), (0.8, 0.8), (0.9, 0.9), (1, 1)], null=True)),
                ('game_slider6', otree.db.models.FloatField(choices=[(0, 0), (0.1, 0.1), (0.2, 0.2), (0.3, 0.3), (0.4, 0.4), (0.5, 0.5), (0.6, 0.6), (0.7, 0.7), (0.8, 0.8), (0.9, 0.9), (1, 1)], null=True)),
                ('game_slider7', otree.db.models.FloatField(choices=[(0, 0), (0.1, 0.1), (0.2, 0.2), (0.3, 0.3), (0.4, 0.4), (0.5, 0.5), (0.6, 0.6), (0.7, 0.7), (0.8, 0.8), (0.9, 0.9), (1, 1)], null=True)),
                ('game_slider8', otree.db.models.FloatField(choices=[(0, 0), (0.1, 0.1), (0.2, 0.2), (0.3, 0.3), (0.4, 0.4), (0.5, 0.5), (0.6, 0.6), (0.7, 0.7), (0.8, 0.8), (0.9, 0.9), (1, 1)], null=True)),
                ('game_slider9', otree.db.models.FloatField(choices=[(0, 0), (0.1, 0.1), (0.2, 0.2), (0.3, 0.3), (0.4, 0.4), (0.5, 0.5), (0.6, 0.6), (0.7, 0.7), (0.8, 0.8), (0.9, 0.9), (1, 1)], null=True)),
                ('treatment_group', otree.db.models.IntegerField(null=True)),
                ('group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='skill_task.Group')),
                ('participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='skill_task_player', to='otree.Participant')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='skill_task_player', to='otree.Session')),
                ('subsession', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='skill_task.Subsession')),
            ],
            options={
                'db_table': 'skill_task_player',
            },
            bases=(models.Model, otree.db.idmap.PlayerIDMapMixin),
        ),
        migrations.AddField(
            model_name='group',
            name='subsession',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='skill_task.Subsession'),
        ),
    ]
